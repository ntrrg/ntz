name: CI
on:
  push:
    branches:
      - main
    #paths:
    #  - 'src/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
jobs:
  ci:
    name: Integration
    strategy:
      matrix:
        os:
          - ubuntu-latest
        linux_arch:
          - x86_64
        optimize:
          - ReleaseSmall
          - ReleaseFast
          - ReleaseSafe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Zig
        uses: mlugg/setup-zig@v2
        with:
          version: '0.14.0'

      - name: Get source code
        uses: actions/checkout@v4

      - name: Lint
        run: zig fmt --check --ast-check build.zig.zon build.zig src examples

      - name: Build (Linux ${{ matrix.linux_arch }} ${{ matrix.optimize }})
        if: matrix.os == 'ubuntu-latest'
        run: zig build -p zig-out/ntz-linux-${{ matrix.linux_arch }}-${{ matrix.optimize }} -Dtarget=${{ matrix.linux_arch }}-linux -Doptimize=${{ matrix.optimize }}

      - name: Tests
        run: zig build --summary all test

      #- name: Setup wasmtime
      #  if: matrix.os == 'ubuntu-latest'
      #  uses: bytecodealliance/actions/wasmtime/setup@v1

      #- name: Test (WASM)
      #  if: matrix.os == 'ubuntu-latest'
      #  run: zig build -fwasmtime -Dtarget=wasm32-wasi --summary all test

      - name: Package (Linux ${{ matrix.linux_arch }} ${{ matrix.optimize }})
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist
          tar -cvzf dist/ntz-${{ github.ref_name }}-linux-${{ matrix.linux_arch }}-${{ matrix.optimize }}.tar.gz -C zig-out/ntz-linux-${{ matrix.linux_arch }}-${{ matrix.optimize }} .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ntz-linux-${{ matrix.linux_arch }}-${{ matrix.optimize }}
          path: ./dist/
